version: '3'

services:
  rabbitmq:
    image: 'rabbitmq:management'
    ports:
      - '15672:15672'
      - '5672:5672'
    depends_on:
      - myapp
    # environment:
    #   - RABBITMQ_DEFAULT_USER=myuser
    #   - RABBITMQ_DEFAULT_PASS=mypassword
    networks:
      - app_network

  celery:
    build: .
    command: celery -A backend.celery:app worker --loglevel=info
    # restart: always
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - prometheus
      - grafana
      - myapp
    networks:
      - app_network

  myapp:
    build: .
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
      - ./backend/mydatabase.sqlite3:/app/backend/mydatabase.sqlite3
      - ./scripts/wait-for-it.sh:/scripts/wait-for-it.sh
    ports:
      - "8000:8000"
    # restart: always
    entrypoint: ["/app/entrypoint.sh"]
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

volumes:
  prometheus_data: {}
  grafana-data: {}

networks:
  app_network:
    driver: bridge
